name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # or your primary branch
      - dev   # adding dev branch
  pull_request:
    branches:
      - main  # or your primary branch
      - dev   # adding dev branch
  workflow_dispatch:  # Allow manual runs

jobs:
  build-rust:
    name: Build Rust Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Test Rust Project
        run: |
          cargo test --all

      - name: Build Rust Project
        run: |
          cargo build --verbose --release

      - name: Build Web Assembly (Wasm)
        run: |
          cd web
          cargo install wasm-pack
          wasm-pack build --target web --release

      - name: Upload Wasm Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-artifacts
          path: web/pkg

  build-web:
    name: Build Web Editor
    runs-on: ubuntu-latest
    needs: build-rust

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Wasm Artifacts
        uses: actions/download-artifact@v4
        with:
          name: wasm-artifacts
          path: web/pkg

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build Web Editor
        run: |
          cd web
          pnpm install
          pnpm build-lezer # Build the Lezer parser
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Building for production (main branch)"
            pnpm build --public-url /editor
          else
            echo "Building for development (dev branch)"
            pnpm build --public-url /dev/editor
          fi
          mv dist ../editor

      - name: Upload Built Web Editor
        uses: actions/upload-artifact@v4
        with:
          name: web-editor
          path: editor


  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "DEPLOY_PATH=" >> $GITHUB_ENV
            echo "Building for production (main branch)"
          else
            echo "DEPLOY_PATH=dev" >> $GITHUB_ENV
            echo "Building for development (dev branch)"
          fi

      - name: Download Built Web Editor
        uses: actions/download-artifact@v4
        with:
          name: web-editor
          path: editor

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: pnpm --prefix ./doc install

      - name: Build site
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            pnpm --prefix ./doc run build
          else
            pnpm --prefix ./doc run build:dev
          fi
  
      - name: Deploy to althread.github.io 
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          # Start SSH agent and add the deploy key
          eval "$(ssh-agent -s)"
          ssh-add <(echo "${{ secrets.DEPLOY_KEY }}")

          # Clone the target repository (orgname.github.io)
          git clone --branch=gh-pages git@github.com:althread/althread.github.io.git deploy

          # Remove old files and copy new ones based on branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For main branch, deploy to root
            rm -rf deploy/*
            cp -r doc/build/* deploy/
            cp -r editor deploy/editor
          else
            # For dev branch, deploy to /dev folder
            rm -rf deploy/dev
            mkdir -p deploy/dev
            cp -r doc/build/dev/* deploy/dev/
            cp -r editor deploy/dev/editor
          fi
          
          # Commit and push changes
          cd deploy
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy site from ${GITHUB_REF##*/} branch"
          git push origin gh-pages

